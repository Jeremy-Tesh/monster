{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","c","name","alt","src","id","email","CardList","a","map","b","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","monsters","fetch","then","response","json","users","this","filteredMonsters","filter","mon","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAEaA,EAAO,SAACC,GAAD,OAClB,sBAAKC,UAAU,iBAAf,UACE,6BAAKD,EAAME,EAAEC,OACb,qBAAKC,IAAI,WAAWC,IAAG,+BAA0BL,EAAME,EAAEI,GAAlC,eACvB,4BAAIN,EAAME,EAAEK,YCHHC,EAAW,SAACR,GAAD,OACtB,qBAAKC,UAAU,YAAf,SACGD,EAAMS,EAAEC,KAAI,SAACC,GAAD,OACX,cAAC,EAAD,CAAMT,EAAGS,UCHFC,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACvB,uBACEb,UAAU,SACVc,KAAK,OACLF,YAAaA,EACbG,SAAUF,MC2BCG,E,kDA7Bb,aAAe,IAAD,8BACZ,gBASFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SATtC,EAAKC,MAAQ,CAAEC,SAAU,GAAIJ,YAAa,IAF9B,E,qDAKd,WAAqB,IAAD,OAClBK,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKV,SAAS,CAAEK,SAAUK,S,oBAM/C,WAAU,IAAD,EAC2BC,KAAKP,MAA/BC,EADD,EACCA,SAAUJ,EADX,EACWA,YACZW,EAAmBP,EAASQ,QAAO,SAACC,GAAD,OACvCA,EAAI9B,KAAK+B,cAAcC,SAASf,EAAYc,kBAE9C,OACE,sBAAKjC,UAAU,MAAf,UACE,0CADF,IAEE,cAAC,EAAD,CAAWY,YAAY,SAASC,aAAcgB,KAAKhB,eACnD,cAAC,EAAD,CAAUL,EAAGsB,W,GAxBHK,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e474c12d.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./card.styles.css\";\nexport const Card = (props) => (\n  <div className=\"card-container\">\n    <h1>{props.c.name}</h1>\n    <img alt=\"monsters\" src={`https://robohash.org/${props.c.id}?set=set2`} />\n    <p>{props.c.email}</p>\n  </div>\n);\n","import React from \"react\";\nimport \"./card-list.styles.css\";\nimport { Card } from \"../card/card.component\";\nexport const CardList = (props) => (\n  <div className=\"card-list\">\n    {props.a.map((b) => (\n      <Card c={b} />\n    ))}\n  </div>\n);\n","import React from \"react\";\nimport \"./search-box.styles.css\";\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n  <input\n    className=\"search\"\n    type=\"text\"\n    placeholder={placeholder}\n    onChange={handleChange}\n  />\n);\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = { monsters: [], searchField: \"\" };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter((mon) =>\n      mon.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1>Monsters</h1>;\n        <SearchBox placeholder=\"search\" handleChange={this.handleChange} />\n        <CardList a={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}